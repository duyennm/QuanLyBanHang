package poly.GUI;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import poly.dao.HoaDonCTDAO;
import poly.dao.HoaDonDAO;
import poly.dao.KhachHangDAO;
import poly.dao.SanPhamDAO;
import poly.model.HoaDon;
import poly.model.HoaDonCT;
import poly.model.KhachHang;
import poly.model.SanPham;


public class DialogHoaDon extends javax.swing.JDialog {
    TableRowSorter sorter;
    String txtMaHD;
    public DialogHoaDon(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        /*
         * Đưa form ra giữa màn hình
         */
        initModel();
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension window = this.getSize();
        int x = (screen.width - window.width)/2;
        int y = (screen.height - window.height)/2;
        this.setLocation(x, y);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane8 = new javax.swing.JScrollPane();
        grHoaDon = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTimKiemHD = new javax.swing.JTextField();
        btnNhapLaiSP = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cboSanPham = new javax.swing.JComboBox<>();
        btnXoaTimKiem = new javax.swing.JButton();
        cboKhachHang = new javax.swing.JComboBox<>();
        btnTaoHD = new javax.swing.JButton();
        txtTenKh = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        grHoaDonCT = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("D-Start _ Quản Lý Hóa Đơn");
        setAlwaysOnTop(true);

        grHoaDon.setAutoCreateRowSorter(true);
        grHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hóa Đơn", "Mã Khách Hàng", "Ngày Mua"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grHoaDonMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(grHoaDon);
        if (grHoaDon.getColumnModel().getColumnCount() > 0) {
            grHoaDon.getColumnModel().getColumn(0).setResizable(false);
            grHoaDon.getColumnModel().getColumn(1).setResizable(false);
            grHoaDon.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("QUẢN LÝ HÓA ĐƠN");

        jLabel2.setText("Khách hàng:");

        jLabel3.setText("Số lượng");

        jLabel6.setText("Nhập mã hóa đơn:");

        txtTimKiemHD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemHDKeyPressed(evt);
            }
        });

        btnNhapLaiSP.setText("Nhập lại");
        btnNhapLaiSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapLaiSPActionPerformed(evt);
            }
        });

        jLabel4.setText("Sản phẩm:");

        cboSanPham.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã sản phẩm" }));
        cboSanPham.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSanPhamItemStateChanged(evt);
            }
        });

        btnXoaTimKiem.setText("Xóa tìm kiếm");
        btnXoaTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTimKiemActionPerformed(evt);
            }
        });

        cboKhachHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã khách hàng" }));
        cboKhachHang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboKhachHangItemStateChanged(evt);
            }
        });

        btnTaoHD.setText("Tạo Hóa Đơn");
        btnTaoHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHDActionPerformed(evt);
            }
        });

        txtTenKh.setText("Tên Khách Hàng");

        txtTenSP.setText("Tên Sản Phẩm");

        grHoaDonCT.setAutoCreateRowSorter(true);
        grHoaDonCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HĐ", "Tên SP", "Số Lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grHoaDonCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grHoaDonCTMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(grHoaDonCT);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("HÓA ĐƠN CHI TIẾT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel1)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(txtTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXoaTimKiem)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(28, 28, 28)
                        .addComponent(txtSoLuong))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenSP)
                            .addComponent(cboSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenKh)
                            .addComponent(cboKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnTaoHD, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNhapLaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnXoaTimKiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cboKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTenKh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cboSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenSP)
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNhapLaiSP)
                            .addComponent(btnTaoHD)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void grHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grHoaDonMouseClicked
        // TODO add your handling code here:
         int i = grHoaDon.getSelectedRow();
        String s = grHoaDon.getValueAt(i, 0).toString();
        
        model = (DefaultTableModel) grHoaDon.getModel();
        modelCT = (DefaultTableModel) grHoaDonCT.getModel();
        
        if (modelCT.getRowCount() > 0) {
            if (!modelCT.getValueAt(0, 0).toString().equals(s)) {
                int rowCount = modelCT.getRowCount();
                for (int e = rowCount - 1; e >= 0; e--) {
                    modelCT.removeRow(e);
                }
            }
        }else{
            HoaDonCTDAO dao = new HoaDonCTDAO();
            List<HoaDonCT> list = dao.showHonDonCT(Integer.parseInt(s));
            for (HoaDonCT hoaDonCT : list) {
                modelCT.addRow(hoaDonCT.toVector());
            }
        }

    }//GEN-LAST:event_grHoaDonMouseClicked

    private void btnNhapLaiSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapLaiSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNhapLaiSPActionPerformed

    private void txtTimKiemHDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemHDKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            sorter = (TableRowSorter) grHoaDon.getRowSorter();

            ArrayList dk = new ArrayList();
            String s = txtTimKiemHD.getText().trim();
            dk.add(javax.swing.RowFilter.regexFilter("(?i)" + s, 0));
            sorter.setRowFilter(javax.swing.RowFilter.andFilter(dk));
        }
    }//GEN-LAST:event_txtTimKiemHDKeyPressed

    private void btnXoaTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTimKiemActionPerformed
        // TODO add your handling code here:
        txtTimKiemHD.setText(null);
        sorter.setRowFilter(null);
    }//GEN-LAST:event_btnXoaTimKiemActionPerformed

    private void btnTaoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHDActionPerformed
        // TODO add your handling code here:
        if (txtSoLuong.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không được bỏ trống Số lượng?", "Thông báo", JOptionPane.OK_OPTION);
            txtSoLuong.requestFocus();
            return;
        }
        do {
                Pattern p = null;
                Matcher m = null;
                p = Pattern.compile("[0-9]+", Pattern.CASE_INSENSITIVE);
                m = p.matcher(txtSoLuong.getText());
                if (!m.matches()) {
                    JOptionPane.showMessageDialog(this, "Nhập sai định dạng số !!");
                    txtSoLuong.requestFocus();
                    return;
                }
                break;
            } while (true);
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        String s = dateFormat.format(date);
        
        HoaDon hd = new HoaDon(s, Integer.parseInt(cboKhachHang.getSelectedItem().toString().trim()));
        HoaDonDAO hdDAO= new HoaDonDAO();
        if (hdDAO.insert(hd) > 0) {
            HoaDonCT hdct = new HoaDonCT(Integer.parseInt(cboSanPham.getSelectedItem().toString().trim()), Integer.parseInt(txtSoLuong.getText().toString()));
            HoaDonCTDAO hdctDAO = new HoaDonCTDAO();
            if (hdctDAO.insert(hdct)>0) {
                initModel();
                JOptionPane.showMessageDialog(this, "Thêm hóa đơn thành công");
                return;
            }
        }else{
            JOptionPane.showMessageDialog(null, "Thêm hóa đơn thất bại");
        }
    }//GEN-LAST:event_btnTaoHDActionPerformed

    private void cboKhachHangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboKhachHangItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String item = evt.getItem().toString().trim();
            int ma = Integer.parseInt(item);
            for (KhachHang kh : listKH) {
                if (ma == kh.getMaKH()) {
                    txtTenKh.setText(kh.getTenKH());
                 }
            }
            
        }
    }//GEN-LAST:event_cboKhachHangItemStateChanged

    private void cboSanPhamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSanPhamItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String item = evt.getItem().toString().trim();
            int ma = Integer.parseInt(item);
            for (SanPham sp : listSP) {
                if (ma == sp.getMaSP()) {
                    txtTenSP.setText(sp.getTenSP());
                 }
            }
            
        }
    }//GEN-LAST:event_cboSanPhamItemStateChanged

    private void grHoaDonCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grHoaDonCTMouseClicked
        // TODO add your handling code here:
        DefaultTableModel modelspco = (DefaultTableModel) grHoaDonCT.getModel();
    }//GEN-LAST:event_grHoaDonCTMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void chayAbout() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogHoaDon dialog = new DialogHoaDon(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                
                dialog.setSize(370, 300);
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNhapLaiSP;
    private javax.swing.JButton btnTaoHD;
    private javax.swing.JButton btnXoaTimKiem;
    private javax.swing.JComboBox<String> cboKhachHang;
    private javax.swing.JComboBox<String> cboSanPham;
    private javax.swing.JTable grHoaDon;
    private javax.swing.JTable grHoaDonCT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JLabel txtTenKh;
    private javax.swing.JLabel txtTenSP;
    private javax.swing.JTextField txtTimKiemHD;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel model;
    DefaultTableModel modelCT;
    List<HoaDon> listHD;
    List<KhachHang> listKH;
    List<SanPham> listSP;
    private void initModel() {
        model = (DefaultTableModel) grHoaDon.getModel();
        model.setRowCount(0);
         listHD = new ArrayList<HoaDon>();
         listHD.clear();
         
        listHD = new HoaDonDAO().showHonDon();
        
        for (HoaDon khachHang : listHD) {
            model.addRow(khachHang.toVector());
        }
        
        // Khach hàng
        cboKhachHang.removeAllItems();
        listKH = new ArrayList<KhachHang>();
        listKH.clear();
        
        listKH = new KhachHangDAO().showKhachHang("");
        for (KhachHang kh : listKH) {
            cboKhachHang.addItem(kh.getMaKH()+"");
        }
        txtTenKh.setText(listKH.get(0).getTenKH());
        // Sản phẩm
        cboSanPham.removeAllItems();
        listSP = new ArrayList<SanPham>();
         listSP.clear();
         
         listSP = new SanPhamDAO().showSanPham("");
        
        for (SanPham sp : listSP) {
            cboSanPham.addItem(sp.getMaSP()+"");
        }
        
    }
     private void setNullField() {
         txtSoLuong.setText("");
         cboKhachHang.setSelectedIndex(0);
         cboSanPham.setSelectedIndex(0);
    }
}
