package poly.GUI;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import poly.dao.KhachHangDAO;
import poly.model.KhachHang;


public class DialogKhachHang extends javax.swing.JDialog {
    public static Main mainRun = new Main();
    TableRowSorter sorter;
    String txtMaKH;
    public DialogKhachHang(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        /*
         * Đưa form ra giữa màn hình
         */
        initModel();
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension window = this.getSize();
        int x = (screen.width - window.width)/2;
        int y = (screen.height - window.height)/2;
        this.setLocation(x, y);
        this.setResizable(false);
        btnSuaKH.setEnabled(false);
        btnXoaKH.setEnabled(false);
        btnThemKH.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane8 = new javax.swing.JScrollPane();
        grKhachHang = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        btnThemKH = new javax.swing.JButton();
        btnSuaKH = new javax.swing.JButton();
        btnXoaKH = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtTimKiemKH = new javax.swing.JTextField();
        btnNhapLaiKH = new javax.swing.JButton();
        btnXoaTimKiem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("D-Start _ Quản Lý Khách Hàng");
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        grKhachHang.setAutoCreateRowSorter(true);
        grKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KH", "Tên KH", "Địa Chỉ", "SĐT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grKhachHangMouseClicked(evt);
            }
        });
        grKhachHang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grKhachHangKeyPressed(evt);
            }
        });
        jScrollPane8.setViewportView(grKhachHang);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("QUẢN LÝ KHÁCH HÀNG");

        jLabel2.setText("Tên KH:");

        jLabel3.setText("Địa Chỉ:");

        jLabel5.setText("SĐT:");

        btnThemKH.setText("Thêm");
        btnThemKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKHActionPerformed(evt);
            }
        });

        btnSuaKH.setText("Cập nhật");
        btnSuaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaKHActionPerformed(evt);
            }
        });

        btnXoaKH.setText("Xóa");
        btnXoaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaKHActionPerformed(evt);
            }
        });

        jLabel6.setText("Nhập Tên Tìm Kiếm:");

        txtTimKiemKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemKHKeyPressed(evt);
            }
        });

        btnNhapLaiKH.setText("Nhập lại");
        btnNhapLaiKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapLaiKHActionPerformed(evt);
            }
        });

        btnXoaTimKiem.setText("Xóa tìm kiếm");
        btnXoaTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenKH)
                            .addComponent(txtDiaChi)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTimKiemKH, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnXoaTimKiem)))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThemKH)
                .addGap(18, 18, 18)
                .addComponent(btnSuaKH)
                .addGap(18, 18, 18)
                .addComponent(btnXoaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnNhapLaiKH)
                .addGap(106, 106, 106))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiemKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnXoaTimKiem))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSuaKH)
                    .addComponent(btnXoaKH)
                    .addComponent(btnThemKH)
                    .addComponent(btnNhapLaiKH))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void grKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grKhachHangMouseClicked
        // TODO add your handling code here:
       int i = grKhachHang.getSelectedRow();

        if (i < 0) {
            return;
        }

        txtMaKH = grKhachHang.getValueAt(i, 0).toString();
        txtTenKH.setText(grKhachHang.getValueAt(i, 1).toString());
        txtDiaChi.setText(grKhachHang.getValueAt(i, 2).toString());
        txtSDT.setText(grKhachHang.getValueAt(i, 3).toString());
        
        btnSuaKH.setEnabled(true);
        btnXoaKH.setEnabled(true);
        btnThemKH.setEnabled(false);

    }//GEN-LAST:event_grKhachHangMouseClicked

    private void grKhachHangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grKhachHangKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_grKhachHangKeyPressed

    private void txtTimKiemKHKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKHKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            sorter = (TableRowSorter) grKhachHang.getRowSorter();

            ArrayList dk = new ArrayList();
            String s = txtTimKiemKH.getText().trim();
            dk.add(javax.swing.RowFilter.regexFilter("(?i)" + s, 1));
            sorter.setRowFilter(javax.swing.RowFilter.andFilter(dk));
        }
    }//GEN-LAST:event_txtTimKiemKHKeyPressed

    private void btnXoaTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTimKiemActionPerformed
        // TODO add your handling code here:
        txtTimKiemKH.setText(null);
        sorter.setRowFilter(null);
    }//GEN-LAST:event_btnXoaTimKiemActionPerformed

    private void btnThemKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKHActionPerformed
        // TODO add your handling code here:
        if (txtTenKH.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không được bỏ trống?", "Thông báo", JOptionPane.OK_OPTION);
            txtTenKH.requestFocus();
            return;
        }
        if (txtDiaChi.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không được bỏ trống?", "Thông báo", JOptionPane.OK_OPTION);
            txtDiaChi.requestFocus();
            return;
        }
        if (txtSDT.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không được bỏ trống?", "Thông báo", JOptionPane.OK_OPTION);
            txtSDT.requestFocus();
            return;
        }
        do {
                Pattern p = null;
                Matcher m = null;
                p = Pattern.compile("^\\d{8,12}$", Pattern.CASE_INSENSITIVE);
                m = p.matcher(txtSDT.getText());
                if (!m.matches()) {
                    JOptionPane.showMessageDialog(this, "Nhập sai định dạng của số điện thoại");
                    return;
                }
                break;
            } while (true);
        KhachHang kh = new KhachHang(txtTenKH.getText().trim(), txtDiaChi.getText().trim(), Integer.parseInt(txtSDT.getText().trim()));
        KhachHangDAO khachHangDAO = new KhachHangDAO();
        if (khachHangDAO.insert(kh)>0) {
                setNullField();
                JOptionPane.showMessageDialog(this, "Thêm thành công");
                model.setRowCount(0);
                initModel();
        } else {
                JOptionPane.showMessageDialog(this, "Thêm thất bại");
        }
    }//GEN-LAST:event_btnThemKHActionPerformed

    private void btnNhapLaiKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapLaiKHActionPerformed
        // TODO add your handling code here:
        setNullField();
    }//GEN-LAST:event_btnNhapLaiKHActionPerformed

    private void btnXoaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaKHActionPerformed
        // TODO add your handling code here:
        int a = grKhachHang.getSelectedRow();
        KhachHang nx = new KhachHang();
        if (a < 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn dòng nào ");
            return;
        }
        if (txtMaKH.length() == 0) {
            JOptionPane.showMessageDialog(this, "Có lỗi trong lúc chọn dòng vui lòng chọn lại");
            return;
        }
        int i = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xoá ? ", "Xoá", JOptionPane.YES_NO_OPTION);
        if (i == JOptionPane.YES_OPTION) {
            //PhieuNX pnx = new PhieuNX();
           // pnx.findNhanVien(txtMaNV.getText());
            //System.out.println(pnx.getMaNV());
          //  if (pnx.getMaNV() != null) {
          //      JOptionPane.showMessageDialog(null, "Nhân viên này đã từng tạo phiếu \n Xoá thất bại");
          //      return;
         //   }
            KhachHangDAO dao = new KhachHangDAO();
            if (dao.delete(Integer.parseInt(txtMaKH))>0) {
                JOptionPane.showMessageDialog(this, "Xoá khách hàng thành công");
                model.setRowCount(0);
                initModel();
                return;

            } else {
                JOptionPane.showMessageDialog(this, "Xoá khách hàng thất bại");
                return;
            }
        }
    }//GEN-LAST:event_btnXoaKHActionPerformed

    private void btnSuaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaKHActionPerformed
        // TODO add your handling code here:
        int a = grKhachHang.getSelectedRow();
        KhachHang nx = new KhachHang();
        if (a < 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn dòng nào ");
            return;
        }
        if (txtMaKH.length() == 0) {
            JOptionPane.showMessageDialog(this, "Có lỗi trong lúc chọn dòng vui lòng chọn lại");
            return;
        }
        if (txtTenKH.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không được bỏ trống?", "Thông báo", JOptionPane.OK_OPTION);
            txtTenKH.requestFocus();
            return;
        }
        if (txtDiaChi.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không được bỏ trống?", "Thông báo", JOptionPane.OK_OPTION);
            txtDiaChi.requestFocus();
            return;
        }
        if (txtSDT.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không được bỏ trống?", "Thông báo", JOptionPane.OK_OPTION);
            txtSDT.requestFocus();
            return;
        }
        do {
                    Pattern p = null;
                    Matcher m = null;
                    p = Pattern.compile("^\\d{8,12}$", Pattern.CASE_INSENSITIVE);
                    m = p.matcher(txtSDT.getText());
                    if (!m.matches()) {
                        JOptionPane.showMessageDialog(null, "Nhập sai định dạng của số điện thoại");
                        return;
                    }
                    break;
        } while (true);
        KhachHang kh = new KhachHang(Integer.parseInt(txtMaKH),txtTenKH.getText().trim(), txtDiaChi.getText().trim(), Integer.parseInt(txtSDT.getText().trim()));
        KhachHangDAO khachHangDAO = new KhachHangDAO();
        if (khachHangDAO.update(kh)>0) {
                setNullField();
                JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                model.setRowCount(0);
                initModel();
        } else {
                JOptionPane.showMessageDialog(this, "Cập nhật thất bại");
        }
    }//GEN-LAST:event_btnSuaKHActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
           
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void chayAbout() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogKhachHang dialog = new DialogKhachHang(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                
                dialog.setSize(370, 300);
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNhapLaiKH;
    private javax.swing.JButton btnSuaKH;
    private javax.swing.JButton btnThemKH;
    private javax.swing.JButton btnXoaKH;
    private javax.swing.JButton btnXoaTimKiem;
    private javax.swing.JTable grKhachHang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTimKiemKH;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel model;
    
    List<KhachHang> listKH;
    private void initModel() {
        model = (DefaultTableModel) grKhachHang.getModel();
        model.setRowCount(0);
         listKH = new ArrayList<KhachHang>();
         listKH.clear();
         
        listKH = new KhachHangDAO().showKhachHang("");
        
        for (KhachHang khachHang : listKH) {
            model.addRow(khachHang.toVector());
        }
    }
    private void setNullField() {
        txtMaKH = "";
        txtDiaChi.setText("");
        txtSDT.setText("");
        txtTenKH.setText("");
        btnSuaKH.setEnabled(false);
        btnXoaKH.setEnabled(false);
        btnThemKH.setEnabled(true);
    }
}
